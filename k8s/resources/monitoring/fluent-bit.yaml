#! Originally based on Helm chart from https://github.com/fluent/helm-charts/tree/fluent-bit-0.20.9/charts/fluent-bit

#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#@ namespace = "monitoring"
#@ name = "fluent-bit"
#@ version = "2.0.3"
#@ category = "logs"

#@ common_metadata = {"namespace": namespace, "name": name}
#@ common_labels = {"app.kubernetes.io/name": name, "app.kubernetes.io/version": version, "app.kubernetes.io/part-of": category}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  _: #@ template.replace(common_metadata)
  labels:
    _: #@ template.replace(common_labels)
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: #@ namespace
  name: #@ name + "-config"
  labels:
    _: #@ template.replace(common_labels)
data:
  custom_parsers.conf: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
    
  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
    
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
    
    [INPUT]
        Name systemd
        Tag host.*
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail On
    
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
    
    [OUTPUT]
        Name es
        Match kube.*
        Host ${ELASTICSEARCH_HOST}
        HTTP_User ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd ${ELASTICSEARCH_PASSWORD}
        tls on
        tls.ca_file /es-http-certs/ca.crt
        tls.crt_file /es-http-certs/tls.crt
        Suppress_Type_Name On
        Replace_Dots On
        Trace_Error On
        Logstash_Format On
        Retry_Limit False
    
    [OUTPUT]
        Name es
        Match host.*
        Host ${ELASTICSEARCH_HOST}
        HTTP_User ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd ${ELASTICSEARCH_PASSWORD}
        tls on
        tls.ca_file /es-http-certs/ca.crt
        tls.crt_file /es-http-certs/tls.crt
        Suppress_Type_Name On
        Replace_Dots On
        Trace_Error On
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  _: #@ template.replace(common_metadata)
  labels:
    _: #@ template.replace(common_labels)
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  _: #@ template.replace(common_metadata)
  labels:
    _: #@ template.replace(common_labels)
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ name
subjects:
  - kind: ServiceAccount
    name: #@ name
    namespace: #@ namespace
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  _: #@ template.replace(common_metadata)
  labels:
    _: #@ template.replace(common_labels)
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: #@ name
      app.kubernetes.io/part-of: #@ category
  template:
    metadata:
      labels:
        _: #@ template.replace(common_labels)
    spec:
      serviceAccountName: #@ name
      hostNetwork: false
      containers:
        - name: #@ name
          image: #@ "cr.fluentbit.io/fluent/fluent-bit:{}".format(version)
          imagePullPolicy: Always
          env:
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch-es-http.monitoring"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-user-fluentbit
                  key: "username"
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-user-fluentbit
                  key: "password"
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc/fluent-bit.conf
              subPath: fluent-bit.conf
            - name: config
              mountPath: /fluent-bit/etc/custom_parsers.conf
              subPath: custom_parsers.conf
            - name: es-http-certs
              mountPath: /es-http-certs
            - name: var-log
              mountPath: /var/log
              readOnly: true
            - name: var-lib-docker-containers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: etc-machine-id
              mountPath: /etc/machine-id
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: #@ name + "-config"
        - name: es-http-certs
          secret:
            secretName: elasticsearch-es-http-certs-public
        - name: var-log
          hostPath:
            path: /var/log
        - name: var-lib-docker-containers
          hostPath:
            path: /var/lib/docker/containers
        - name: etc-machine-id
          hostPath:
            path: /etc/machine-id
            type: File
---
apiVersion: v1
kind: Service
metadata:
  _: #@ template.replace(common_metadata)
  labels:
    _: #@ template.replace(common_labels)
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: #@ name
    app.kubernetes.io/part-of: #@ category
